{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\Chat-Application\\\\client\\\\src\\\\component\\\\menu\\\\Conversations.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from \"react\";\nimport { getUser } from \"../../service/api\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport { AccountContext } from \"../../context/AccountProvider\"; //component\n\nimport Conversation from \"./Conversation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  component: {\n    height: \"81vh\",\n    overflow: \"overlay\"\n  }\n});\n\nconst Conversations = ({\n  text\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [users, setUsers] = useState([]);\n  const {\n    account,\n    socket\n  } = useContext(AccountContext);\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getUser();\n      const filterData = data.filter(user => user.name.toLowerCase().includes(text.toLowerCase()));\n      setUsers(filterData);\n    };\n\n    fetchData();\n  }, [text]);\n  useEffect(() => {\n    socket.current.emit(\"addUser\", account.googleId);\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.component,\n    children: users.map(user => user.googleId !== account.googleId && /*#__PURE__*/_jsxDEV(Conversation, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 49\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Conversations, \"THPSGpPGJ2aB1IS+H0hg0ZGmR/c=\", false, function () {\n  return [useStyles];\n});\n\n_c = Conversations;\nexport default Conversations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversations\");","map":{"version":3,"sources":["D:/Workspace/Chat-Application/client/src/component/menu/Conversations.jsx"],"names":["useEffect","useState","useContext","getUser","Box","makeStyles","AccountContext","Conversation","useStyles","component","height","overflow","Conversations","text","classes","users","setUsers","account","socket","fetchData","data","filterData","filter","user","name","toLowerCase","includes","current","emit","googleId","map"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,mBAAhC;AAEA,SAASC,cAAT,QAA+B,+BAA/B,C,CACA;;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC;AAC3BI,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,QAAQ,EAAE;AAFD;AADgB,CAAD,CAA5B;;AAOA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAClC,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AAEA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAAEgB,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAsBhB,UAAU,CAACI,cAAD,CAAtC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,SAAS,GAAG,YAAY;AAC5B,YAAMC,IAAI,GAAG,MAAMjB,OAAO,EAA1B;AACA,YAAMkB,UAAU,GAAGD,IAAI,CAACE,MAAL,CAAaC,IAAD,IAC7BA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCb,IAAI,CAACY,WAAL,EAAjC,CADiB,CAAnB;AAGAT,MAAAA,QAAQ,CAACK,UAAD,CAAR;AACD,KAND;;AAOAF,IAAAA,SAAS;AACV,GATQ,EASN,CAACN,IAAD,CATM,CAAT;AAWAb,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,MAAM,CAACS,OAAP,CAAeC,IAAf,CAAoB,SAApB,EAA+BX,OAAO,CAACY,QAAvC;AACD,GAFQ,CAAT;AAIA,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAEf,OAAO,CAACL,SAAxB;AAAA,cACGM,KAAK,CAACe,GAAN,CACEP,IAAD,IACEA,IAAI,CAACM,QAAL,KAAkBZ,OAAO,CAACY,QAA1B,iBAAsC,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEN;AAApB;AAAA;AAAA;AAAA;AAAA,YAFzC;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA9BD;;GAAMX,a;UACYJ,S;;;KADZI,a;AAgCN,eAAeA,aAAf","sourcesContent":["import { useEffect, useState, useContext } from \"react\";\r\nimport { getUser } from \"../../service/api\";\r\nimport { Box, makeStyles } from \"@material-ui/core\";\r\n\r\nimport { AccountContext } from \"../../context/AccountProvider\";\r\n//component\r\nimport Conversation from \"./Conversation\";\r\n\r\nconst useStyles = makeStyles({\r\n  component: {\r\n    height: \"81vh\",\r\n    overflow: \"overlay\",\r\n  },\r\n});\r\n\r\nconst Conversations = ({ text }) => {\r\n  const classes = useStyles();\r\n\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const { account, socket } = useContext(AccountContext);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = await getUser();\r\n      const filterData = data.filter((user) =>\r\n        user.name.toLowerCase().includes(text.toLowerCase())\r\n      );\r\n      setUsers(filterData);\r\n    };\r\n    fetchData();\r\n  }, [text]);\r\n\r\n  useEffect(() => {\r\n    socket.current.emit(\"addUser\", account.googleId);\r\n  });\r\n\r\n  return (\r\n    <Box className={classes.component}>\r\n      {users.map(\r\n        (user) =>\r\n          user.googleId !== account.googleId && <Conversation user={user} />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Conversations;\r\n"]},"metadata":{},"sourceType":"module"}