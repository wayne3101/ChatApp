{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\Chat-Application\\\\client\\\\src\\\\component\\\\menu\\\\Conversation.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, makeStyles, Typography } from \"@material-ui/core\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AccountContext } from \"../../context/AccountProvider\";\nimport { UserContext } from \"../../context/UserProvider\";\nimport { getConversation, setConversation } from \"../../service/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  component: {\n    display: \"flex\",\n    height: 40,\n    padding: \"13px 0\",\n    cursor: \"pointer\"\n  },\n  displayPicture: {\n    width: 50,\n    height: 50,\n    borderRadius: \"50%\",\n    padding: \"0 14px\"\n  },\n  timestamp: {\n    fontSize: 12,\n    marginLeft: \"auto\",\n    marginRight: 20,\n    color: \"#000099\"\n  },\n  text: {\n    color: \"rgba(0,0,0,0.6)\",\n    fontSize: 13\n  }\n});\n\nconst Conversation = ({\n  user\n}) => {\n  _s();\n\n  const url = user.imageUrl;\n  const classes = useStyles();\n  const {\n    account,\n    newMessageFlag\n  } = useContext(AccountContext);\n  const {\n    setPerson\n  } = useContext(UserContext);\n  const [message, setMessage] = useState({});\n  useEffect(() => {\n    const getConversationMessage = async () => {\n      const data = await getConversation({\n        sender: account.googleId,\n        receiver: user.googleId\n      });\n      setMessage({\n        text: data.message,\n        timestamp: data.updatedAt\n      });\n    };\n\n    getConversationMessage();\n  }, [newMessageFlag]);\n\n  const setUser = async () => {\n    setPerson(user);\n    await setConversation({\n      senderId: account.googleId,\n      receiverId: user.googleId\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.component,\n    onClick: () => setUser(),\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: url,\n        alt: \"display-picture\",\n        className: classes.displayPicture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), message.text && /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.timestamp,\n          children: [new Date(message.timestamp).getHours(), \":\", new Date(message.timestamp).getMinutes()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.text,\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Conversation, \"ex3Pht2NhaK3FGrMECmxb+F32HU=\", false, function () {\n  return [useStyles];\n});\n\n_c = Conversation;\nexport default Conversation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"sources":["D:/Workspace/Chat-Application/client/src/component/menu/Conversation.jsx"],"names":["Box","makeStyles","Typography","useContext","useEffect","useState","AccountContext","UserContext","getConversation","setConversation","useStyles","component","display","height","padding","cursor","displayPicture","width","borderRadius","timestamp","fontSize","marginLeft","marginRight","color","text","Conversation","user","url","imageUrl","classes","account","newMessageFlag","setPerson","message","setMessage","getConversationMessage","data","sender","googleId","receiver","updatedAt","setUser","senderId","receiverId","name","Date","getHours","getMinutes"],"mappings":"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","sourcesContent":["import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { AccountContext } from \"../../context/AccountProvider\";\r\nimport { UserContext } from \"../../context/UserProvider\";\r\n\r\nimport { getConversation, setConversation } from \"../../service/api\";\r\nconst useStyles = makeStyles({\r\n  component: {\r\n    display: \"flex\",\r\n    height: 40,\r\n    padding: \"13px 0\",\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  displayPicture: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: \"50%\",\r\n    padding: \"0 14px\",\r\n  },\r\n  timestamp: {\r\n    fontSize: 12,\r\n    marginLeft: \"auto\",\r\n    marginRight: 20,\r\n    color: \"#000099\",\r\n  },\r\n  text: {\r\n    color: \"rgba(0,0,0,0.6)\",\r\n    fontSize: 13,\r\n  },\r\n});\r\n\r\nconst Conversation = ({ user }) => {\r\n  const url = user.imageUrl;\r\n  const classes = useStyles();\r\n\r\n  const { account, newMessageFlag } = useContext(AccountContext);\r\n  const { setPerson } = useContext(UserContext);\r\n\r\n  const [message, setMessage] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getConversationMessage = async () => {\r\n      const data = await getConversation({\r\n        sender: account.googleId,\r\n        receiver: user.googleId,\r\n      });\r\n      setMessage({ text: data.message, timestamp: data.updatedAt });\r\n    };\r\n    getConversationMessage();\r\n  }, [newMessageFlag]);\r\n\r\n  const setUser = async () => {\r\n    setPerson(user);\r\n    await setConversation({\r\n      senderId: account.googleId,\r\n      receiverId: user.googleId,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.component} onClick={() => setUser()}>\r\n      <Box>\r\n        <img\r\n          src={url}\r\n          alt=\"display-picture\"\r\n          className={classes.displayPicture}\r\n        />\r\n      </Box>\r\n      <Box style={{ width: \"100%\" }}>\r\n        <Box style={{ display: \"flex\" }}>\r\n          <Typography>{user.name}</Typography>\r\n          {message.text && (\r\n            <Typography className={classes.timestamp}>\r\n              {new Date(message.timestamp).getHours()}:\r\n              {new Date(message.timestamp).getMinutes()}\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n        <Box>\r\n          <Typography className={classes.text}>{message.text}</Typography>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Conversation;\r\n"]},"metadata":{},"sourceType":"module"}