{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\Chat-Application\\\\client\\\\src\\\\component\\\\chat\\\\Message.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Typography, makeStyles } from \"@material-ui/core\";\nimport { useContext } from \"react\";\nimport { AccountContext } from \"../../context/AccountProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  wrapper: {\n    background: \"#FFFFFF\",\n    padding: 5,\n    maxWidth: \"60%\",\n    display: \"flex\",\n    borderRadius: 10,\n    width: \"fit-content\",\n    wordBreak: \"break-word\"\n  },\n  text: {\n    fontSize: 14,\n    padding: \"0 25px 0 5px\"\n  },\n  time: {\n    fontSize: 10,\n    marginTop: \"auto\",\n    marginTop: 6,\n    color: \"#919191\",\n    wordBreak: \"keep-all\"\n  }\n});\n\nconst Message = ({\n  message\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    account\n  } = useContext(AccountContext);\n\n  const formatDate = date => {\n    return date < 10 ? \"0\" + date : date;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: account.googleId === message.senser ? classes.own : classes.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.text,\n      children: message.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.time,\n      children: [formatDate(new Date(message.createdAt).getHours()), \":\", formatDate(new Date(message.createdAt).getHours())]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Message, \"lxZ1/W47FlOBF+ABBkbU2CG9jFc=\", false, function () {\n  return [useStyles];\n});\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["D:/Workspace/Chat-Application/client/src/component/chat/Message.jsx"],"names":["Box","Typography","makeStyles","useContext","AccountContext","useStyles","wrapper","background","padding","maxWidth","display","borderRadius","width","wordBreak","text","fontSize","time","marginTop","color","Message","message","classes","account","formatDate","date","googleId","senser","own","Date","createdAt","getHours"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,UAA1B,QAA4C,mBAA5C;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,cAAT,QAA+B,+BAA/B;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC;AAC3BI,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE,SADL;AAEPC,IAAAA,OAAO,EAAE,CAFF;AAGPC,IAAAA,QAAQ,EAAE,KAHH;AAIPC,IAAAA,OAAO,EAAE,MAJF;AAKPC,IAAAA,YAAY,EAAE,EALP;AAMPC,IAAAA,KAAK,EAAE,aANA;AAOPC,IAAAA,SAAS,EAAE;AAPJ,GADkB;AAU3BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,EADN;AAEJP,IAAAA,OAAO,EAAE;AAFL,GAVqB;AAc3BQ,EAAAA,IAAI,EAAE;AACJD,IAAAA,QAAQ,EAAE,EADN;AAEJE,IAAAA,SAAS,EAAE,MAFP;AAGJA,IAAAA,SAAS,EAAE,CAHP;AAIJC,IAAAA,KAAK,EAAE,SAJH;AAKJL,IAAAA,SAAS,EAAE;AALP;AAdqB,CAAD,CAA5B;;AAuBA,MAAMM,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAC/B,QAAMC,OAAO,GAAGhB,SAAS,EAAzB;AAEA,QAAM;AAAEiB,IAAAA;AAAF,MAAcnB,UAAU,CAACC,cAAD,CAA9B;;AAEA,QAAMmB,UAAU,GAAIC,IAAD,IAAU;AAC3B,WAAOA,IAAI,GAAG,EAAP,GAAY,MAAMA,IAAlB,GAAyBA,IAAhC;AACD,GAFD;;AAIA,sBACE,QAAC,GAAD;AACE,IAAA,SAAS,EACPF,OAAO,CAACG,QAAR,KAAqBL,OAAO,CAACM,MAA7B,GAAsCL,OAAO,CAACM,GAA9C,GAAoDN,OAAO,CAACf,OAFhE;AAAA,4BAKE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEe,OAAO,CAACP,IAA/B;AAAA,gBAAsCM,OAAO,CAACN;AAA9C;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEO,OAAO,CAACL,IAA/B;AAAA,iBACGO,UAAU,CAAC,IAAIK,IAAJ,CAASR,OAAO,CAACS,SAAjB,EAA4BC,QAA5B,EAAD,CADb,OAEGP,UAAU,CAAC,IAAIK,IAAJ,CAASR,OAAO,CAACS,SAAjB,EAA4BC,QAA5B,EAAD,CAFb;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAtBD;;GAAMX,O;UACYd,S;;;KADZc,O;AAwBN,eAAeA,OAAf","sourcesContent":["import { Box, Typography, makeStyles } from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport { AccountContext } from \"../../context/AccountProvider\";\r\n\r\nconst useStyles = makeStyles({\r\n  wrapper: {\r\n    background: \"#FFFFFF\",\r\n    padding: 5,\r\n    maxWidth: \"60%\",\r\n    display: \"flex\",\r\n    borderRadius: 10,\r\n    width: \"fit-content\",\r\n    wordBreak: \"break-word\",\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n    padding: \"0 25px 0 5px\",\r\n  },\r\n  time: {\r\n    fontSize: 10,\r\n    marginTop: \"auto\",\r\n    marginTop: 6,\r\n    color: \"#919191\",\r\n    wordBreak: \"keep-all\",\r\n  },\r\n});\r\n\r\nconst Message = ({ message }) => {\r\n  const classes = useStyles();\r\n\r\n  const { account } = useContext(AccountContext);\r\n\r\n  const formatDate = (date) => {\r\n    return date < 10 ? \"0\" + date : date;\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      className={\r\n        account.googleId === message.senser ? classes.own : classes.wrapper\r\n      }\r\n    >\r\n      <Typography className={classes.text}>{message.text}</Typography>\r\n      <Typography className={classes.time}>\r\n        {formatDate(new Date(message.createdAt).getHours())}:\r\n        {formatDate(new Date(message.createdAt).getHours())}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n"]},"metadata":{},"sourceType":"module"}